// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: grpc/filetransfer.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	ChunkSize     int32                  `protobuf:"varint,2,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileRequest) Reset() {
	*x = FileRequest{}
	mi := &file_grpc_filetransfer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRequest) ProtoMessage() {}

func (x *FileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_filetransfer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRequest.ProtoReflect.Descriptor instead.
func (*FileRequest) Descriptor() ([]byte, []int) {
	return file_grpc_filetransfer_proto_rawDescGZIP(), []int{0}
}

func (x *FileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileRequest) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

type FileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkData     []byte                 `protobuf:"bytes,1,opt,name=chunk_data,json=chunkData,proto3" json:"chunk_data,omitempty"`
	ChunkIndex    int32                  `protobuf:"varint,2,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	IsLastChunk   bool                   `protobuf:"varint,3,opt,name=is_last_chunk,json=isLastChunk,proto3" json:"is_last_chunk,omitempty"`
	FileName      string                 `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_grpc_filetransfer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_filetransfer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_grpc_filetransfer_proto_rawDescGZIP(), []int{1}
}

func (x *FileChunk) GetChunkData() []byte {
	if x != nil {
		return x.ChunkData
	}
	return nil
}

func (x *FileChunk) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *FileChunk) GetIsLastChunk() bool {
	if x != nil {
		return x.IsLastChunk
	}
	return false
}

func (x *FileChunk) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type UploadStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadStatus) Reset() {
	*x = UploadStatus{}
	mi := &file_grpc_filetransfer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadStatus) ProtoMessage() {}

func (x *UploadStatus) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_filetransfer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadStatus.ProtoReflect.Descriptor instead.
func (*UploadStatus) Descriptor() ([]byte, []int) {
	return file_grpc_filetransfer_proto_rawDescGZIP(), []int{2}
}

func (x *UploadStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UploadStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_grpc_filetransfer_proto protoreflect.FileDescriptor

const file_grpc_filetransfer_proto_rawDesc = "" +
	"\n" +
	"\x17grpc/filetransfer.proto\x12\ffiletransfer\"I\n" +
	"\vFileRequest\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x02 \x01(\x05R\tchunkSize\"\x8c\x01\n" +
	"\tFileChunk\x12\x1d\n" +
	"\n" +
	"chunk_data\x18\x01 \x01(\fR\tchunkData\x12\x1f\n" +
	"\vchunk_index\x18\x02 \x01(\x05R\n" +
	"chunkIndex\x12\"\n" +
	"\ris_last_chunk\x18\x03 \x01(\bR\visLastChunk\x12\x1b\n" +
	"\tfile_name\x18\x04 \x01(\tR\bfileName\"B\n" +
	"\fUploadStatus\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xa0\x01\n" +
	"\x13FileTransferService\x12C\n" +
	"\n" +
	"UploadFile\x12\x17.filetransfer.FileChunk\x1a\x1a.filetransfer.UploadStatus(\x01\x12D\n" +
	"\fDownloadFile\x12\x19.filetransfer.FileRequest\x1a\x17.filetransfer.FileChunk0\x01B!Z\x1fexample/hello/filetransfer/grpcb\x06proto3"

var (
	file_grpc_filetransfer_proto_rawDescOnce sync.Once
	file_grpc_filetransfer_proto_rawDescData []byte
)

func file_grpc_filetransfer_proto_rawDescGZIP() []byte {
	file_grpc_filetransfer_proto_rawDescOnce.Do(func() {
		file_grpc_filetransfer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grpc_filetransfer_proto_rawDesc), len(file_grpc_filetransfer_proto_rawDesc)))
	})
	return file_grpc_filetransfer_proto_rawDescData
}

var file_grpc_filetransfer_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_grpc_filetransfer_proto_goTypes = []any{
	(*FileRequest)(nil),  // 0: filetransfer.FileRequest
	(*FileChunk)(nil),    // 1: filetransfer.FileChunk
	(*UploadStatus)(nil), // 2: filetransfer.UploadStatus
}
var file_grpc_filetransfer_proto_depIdxs = []int32{
	1, // 0: filetransfer.FileTransferService.UploadFile:input_type -> filetransfer.FileChunk
	0, // 1: filetransfer.FileTransferService.DownloadFile:input_type -> filetransfer.FileRequest
	2, // 2: filetransfer.FileTransferService.UploadFile:output_type -> filetransfer.UploadStatus
	1, // 3: filetransfer.FileTransferService.DownloadFile:output_type -> filetransfer.FileChunk
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_filetransfer_proto_init() }
func file_grpc_filetransfer_proto_init() {
	if File_grpc_filetransfer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grpc_filetransfer_proto_rawDesc), len(file_grpc_filetransfer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_filetransfer_proto_goTypes,
		DependencyIndexes: file_grpc_filetransfer_proto_depIdxs,
		MessageInfos:      file_grpc_filetransfer_proto_msgTypes,
	}.Build()
	File_grpc_filetransfer_proto = out.File
	file_grpc_filetransfer_proto_goTypes = nil
	file_grpc_filetransfer_proto_depIdxs = nil
}
